# -*- coding: utf-8 -*-
"""BenchmarkScript.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D3uQboUbnQBm9R-Igz8VtQrHCEHGmJb1
"""

import os

path = "/home/ceadmin/Desktop/aca/aca-lab-module2/mibench/benchmark"

program_binary = [
		"search_large",
		"susan_smoothing",
		"susan_edges",
		"susan_corners",
		"lame",
		"rawcaudio",
		"rawdaudio"]

program_binary_cmds = [
			"./search_large > output_large.txt",
			"./susan input_large.pgm output large.smoothing.pgm -s",
			"./susan input_large.pgm output large.edges.pgm -e",
			"./susan input_large.pgm output large.corners.pgm -c",
			"./lame small.wav output_small.mp3",
			"./rawcaudio < large.pcm > output_large.adpcm",
			"./rawdaudio < large.adpcm > output_large.pcm"]

base_cmd = "sim-outorder"
redir_io = "-redir:sim"

fetch_ifqsize 	= ["4","8"]
decode_width 	= ["8"]
issue_width 	= ["8"]
lsq_size 	= ["4","8"]
ruu_size 	= ["4"]
res_ialu 	= ["1","8"]
res_imult 	= ["4","8"]
res_fpalu 	= ["1","8"]
res_fpmult 	= ["1","8"]
commit_width 	= ["4","8"]
issue_inorder 	= ["false"]
bpred 		= ["bimod"]

#OPTIONS FOR PARAMETERS
#fetch_ifqsize 	= ["1","2","4","8"]
#decode_width 	= ["1","2","4","8"]
#issue_width 	= ["1","2","4","8"]
#lsq_size 	= ["4","8"]
#ruu_size 	= ["4","8"]
#res_ialu 	= ["1","2","4","8"]
#res_imult 	= ["1","2","4","8"]
#res_fpalu 	= ["1","2","4","8"]
#res_fpmult 	= ["1","2","4","8"]
#commit_width 	= ["1","2","4","8"]
#issue_inorder 	= ["true","false"]
#bpred 		= ["taken","notaken","bimod"]

fetch_ifqsize_parameter = "-fetch:ifqsize"
decode_width_parameter 	= "-decode:width"
issue_width_parameter 	= "-issue:width"
lsq_size_parameter 	= "-lsq:size"
ruu_size_parameter 	= "-ruu:size"
res_ialu_parameter 	= "-res:ialu"
res_imult_parameter 	= "-res:imult"
res_fpalu_parameter 	= "-res:fpalu"
res_fpmult_parameter 	= "-res:fpmult"
commit_width_parameter 	= "-commit:width"
issue_inorder_parameter = "-issue:inorder"
bpred_parameter 	= "-bpred"

SPACE = " "
cnt = 0

total_string = ""

for i in range(0,len(program_binary)):
	for j in range(0,len(fetch_ifqsize)):
		for k in range(0,len(decode_width)):
			for l in range(0,len(issue_width)):
				for m in range(0,len(lsq_size)):
					for n in range(0,len(ruu_size)):
						for o in range(0,len(res_ialu)):
							for p in range(0,len(res_imult)):
								for q in range(0,len(res_fpalu)):
									for r in range(0,len(res_fpmult)):
										for s in range(0,len(commit_width)):
											for t in range(0,len(issue_inorder)):
												for u in range(0,len(bpred)):
													fetch_ifqsize_args = fetch_ifqsize_parameter + SPACE + fetch_ifqsize[j]
													decode_width_args  = decode_width_parameter  + SPACE + decode_width[k]
													issue_width_args = issue_width_parameter + SPACE + issue_width[l]
													lsq_size_args = lsq_size_parameter + SPACE + lsq_size[m]
													ruu_size_args = ruu_size_parameter + SPACE + ruu_size[n]
													res_ialu_args = res_ialu_parameter + SPACE + res_ialu[o]
													res_imult_args = res_imult_parameter + SPACE + res_imult[p]
													res_fpalu_args = res_fpalu_parameter + SPACE + res_fpalu[q]
													res_fpmult_args = res_fpmult_parameter + SPACE + res_fpmult[r]
													commit_width_args = commit_width_parameter + SPACE + commit_width[s]
													issue_inorder_args = issue_inorder_parameter + SPACE + issue_inorder[t]
													bpred_parameter_args = bpred_parameter + SPACE + bpred[u]
													outputfile = program_binary[i] + "_fetch" +  fetch_ifqsize[j] + "_decode" + decode_width[k] + "_isswidth" + issue_width[l] + "_lsq" + lsq_size[m] + "_ruu" + ruu_size[n] + "_ialu" + res_ialu[o] + "_imul" + res_imult[p] + "_fpalu" + res_fpalu[q] + "_fpmul" + res_fpmult[r] + "_comm" + commit_width[s] + "_issue_" + issue_inorder[t][0]+".txt"
													cmd = base_cmd + SPACE + redir_io + SPACE + outputfile + SPACE + fetch_ifqsize_args + SPACE + decode_width_args + SPACE + lsq_size_args + SPACE + ruu_size_args + SPACE + res_ialu_args + SPACE + res_imult_args + SPACE +  res_fpalu_args + SPACE +  res_fpmult_args + SPACE +  commit_width_args + SPACE +  issue_inorder_args + SPACE +  bpred_parameter_args + SPACE + program_binary_cmds[i]
													print cmd
													total_string += cmd + "\n"
													cnt += 1
													# Indicate Progress when executing the shell script
													print "echo "+str(cnt) + SPACE +outputfile + SPACE + "generated"